{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","users","setUsers","usersRenderInfo","setUsersRenderInfo","visible","setVisible","maxScore","useEffect","getData","then","console","log","setTimeout","usersRenderData","styleSheet","document","styleSheets","data","forEach","element","index","animationName","username","keyframes","score","insertRule","cssRules","length","userData","push","a","fetch","json","usersData","className","xmlns","viewBox","id","x1","y1","x2","y2","offset","stopColor","d","stroke","strokeWidth","fill","map","item","style","animationDuration","animationFillMode","animationTimingFunction","cursor","email","content","borderRadius","border","height","width","alt","src","image","name","margin","interactive","allowHTML","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0294dc71.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\n\n\nfunction App() {\n\n  const loggedInUser = \"mukul.r@example.com\";\n  const [users, setUsers] = useState(null);\n\n  const [usersRenderInfo, setUsersRenderInfo] = useState(null);\n\n  const [visible, setVisible] = useState(false);\n\n\n  const [maxScore, setMaxScore] = useState(19800);\n\n  useEffect(() => {\n    getData().then(() => {\n      console.log(\"Data Fetched\");\n    });\n\n    setTimeout(()=>{\n      setVisible(true);\n    },5000);\n\n  }, []);\n  useEffect(() => {\n    let usersRenderData = [];\n    if (users) {\n      console.log(users);\n      let styleSheet = document.styleSheets[0];\n      let u = users.data;\n      u.forEach((element, index) => {\n        //console.log(element);\n        let animationName = `${element.username}`;\n        let keyframes =\n          `@keyframes ${animationName} {\n          100% {offset-distance:${(element.score / maxScore) * 100}%;\n      }`;\n\n        styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n        console.log(styleSheet);\n        element[\"animationName\"] = animationName;\n        let userData = element;\n        usersRenderData.push(userData);\n      });\n      console.log(usersRenderData);\n\n      setUsersRenderInfo(usersRenderData);\n\n    }\n  }, [users]);\n\n  const getData = async () => {\n    const usersData = await (await fetch('http://localhost:8080/api/get-users')).json();\n    setUsers(usersData);\n    console.log(usersData);\n  }\n\n  return (\n    <div className=\"root\">\n      {/* <div className=\"App-header\">\n        <h1 className=\"ribbon\">\n          <span className=\"ribbon-content\">GAME SUMMARY</span>\n        </h1>\n      </div> */}\n      <div  className=\"App-header\">\n        GAME&nbsp;&nbsp; SUMMARY\n      </div>\n      <div className=\"main\">\n        <div className=\"leaderboard\">\n          <div className=\"leaderboardMain\">\n            <strong className=\"level1text\">3300 ft.</strong>\n            <strong className=\"level2text\">6600 ft.</strong>\n            <strong className=\"level3text\">9900 ft.</strong>\n            <strong className=\"level4text\">13200 ft.</strong>\n            <strong className=\"level5text\">16500 ft.</strong>\n            <strong className=\"level6text\">19800 ft.</strong>\n\n            <hr className=\"level1\" />\n            <hr className=\"level2\" />\n            <hr className=\"level3\" />\n            <hr className=\"level4\" />\n            <hr className=\"level5\" />\n            <hr className=\"level6\" />\n\n            <svg className=\"route\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1000 563\">\n              <defs>\n                <linearGradient id=\"routeGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                  <stop offset=\"0%\" stopColor=\"white\" />\n                  <stop offset=\"100%\" stopColor=\"orange\" />\n                </linearGradient>\n              </defs>\n              <path d=\"M 68 516 L 286 490 C 354 410 321 504 490 532 C 608 373 676 569 931 503 C 845 404 900 342 967 333 C 777 195 827 342 612 246 C 810 257 621 164 767 174 L 698 122\" stroke=\"url(#routeGradient)\" strokeWidth=\"3\" fill=\"none\" />\n            </svg>\n            {usersRenderInfo && usersRenderInfo.map((item, index) => {\n\n              let style = {\n                animationName: item.animationName,\n                animationDuration: \"5000ms\",\n                animationFillMode: \"forwards\",\n                animationTimingFunction: \"ease-in-out\",\n                cursor: \"grab\"\n              }\n\n              if (item.email === loggedInUser)\n                return (\n                  <Tippy key={index+index+\"\"} content={<div className=\"userToolTip\"><span><img style={{ borderRadius: \"25px\", border: \"1.7px solid firebrick\" }} height={50} width={50} alt={item.username} src={item.image} /></span><span>{item.name}</span><h5 style={{ margin: 0 }}>Score: {item.score}ft</h5></div>}\n                  interactive={true}\n                  allowHTML={true}\n                  visible={visible}\n                  >\n                    <svg key={\"\" + index} className=\"userPin\" style={style} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                      <path d=\"M 13 10 m 0 -5 c -1.657 0 -3 1.343 -3 3 s 1.343 3 3 3 s 3 -1.343 3 -3 s -1.343 -3 -3 -3 m -7 2.602 c 0 -3.517 3.271 -6.602 7 -6.602 s 7 3.085 7 6.602 c 0 3.455 -2.563 7.543 -7 14.527 c -4.489 -7.073 -7 -11.072 -7 -14.527 m 7 -7.602 c -4.198 0 -8 3.403 -8 7.602 c 0 4.198 3.469 9.21 8 16.398 c 4.531 -7.188 8 -12.2 8 -16.398 c 0 -4.199 -3.801 -7.602 -8 -7.602\" stroke=\"darkred\" strokeWidth=\"0.6\" fill=\"darkred\" />\n                    </svg>\n                  </Tippy>\n\n                )\n              else\n                return (\n                  <Tippy key={index+index+\"\"} content={<div className=\"userToolTip\"><span><img style={{ borderRadius: \"25px\", border: \"1.7px solid firebrick\" }} height={50} width={50} alt={item.username} src={item.image} /></span><span>{item.name}</span><h5 style={{ margin: 0 }}>Score: {item.score}ft</h5></div>}\n                  interactive={true}\n                  allowHTML={true}\n                  >\n                    <svg key={\"\" + index} className=\"userPin\" style={style} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                      <path d=\"M 13 10 m 0 -5 c -1.657 0 -3 1.343 -3 3 s 1.343 3 3 3 s 3 -1.343 3 -3 s -1.343 -3 -3 -3 m -7 2.602 c 0 -3.517 3.271 -6.602 7 -6.602 s 7 3.085 7 6.602 c 0 3.455 -2.563 7.543 -7 14.527 c -4.489 -7.073 -7 -11.072 -7 -14.527 m 7 -7.602 c -4.198 0 -8 3.403 -8 7.602 c 0 4.198 3.469 9.21 8 16.398 c 4.531 -7.188 8 -12.2 8 -16.398 c 0 -4.199 -3.801 -7.602 -8 -7.602\" stroke=\"navajowhite\" strokeWidth=\"0.5\" fill=\"navajowhite\" />\n                    </svg>\n                  </Tippy>\n                )\n\n            })\n\n            }\n\n          </div>\n        </div>\n      </div>\n      <div className=\"summary\">\n            <h4>Level 4</h4>\n            <h4>Bronze</h4>\n            <h4>Rising</h4>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}